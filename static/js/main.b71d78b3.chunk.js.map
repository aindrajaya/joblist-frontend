{"version":3,"sources":["components/JobBoardComponent.js","App.js","index.js"],"names":["JobBoardComponent","job","company","logo","isNew","featured","position","role","level","postedAt","contract","location","languages","tools","handleTagClick","tags","push","className","src","alt","map","tag","onClick","console","log","data","App","useState","jobs","setJobs","filters","setFilters","useEffect","includes","filteredJobs","filter","length","every","passedFilter","f","key","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAsEeA,EApEW,SAAC,GAepB,IAAD,IAfsBC,IACxBC,EAcE,EAdFA,QACAC,EAaE,EAbFA,KACAC,EAYE,EAZFA,MACAC,EAWE,EAXFA,SACAC,EAUE,EAVFA,SACAC,EASE,EATFA,KACAC,EAQE,EARFA,MACAC,EAOE,EAPFA,SACAC,EAME,EANFA,SACAC,EAKE,EALFA,SACAC,EAIE,EAJFA,UACAC,EAGE,EAHFA,MAEAC,EACE,EADFA,eAEMC,EAAO,CAACR,EAAMC,GAQpB,OAPGK,GACCE,EAAKC,KAAL,MAAAD,EAAI,YAASF,IAEdD,GACCG,EAAKC,KAAL,MAAAD,EAAI,YAASH,IAIjB,yBAAKK,UAAS,6EAENZ,GAAY,0CAFN,yBAIV,6BACI,yBAAKY,UAAU,wDACXC,IAAKf,EACLgB,IAAKjB,KAGb,yBAAKe,UAAU,sCACX,wBAAIA,UAAU,2BACTf,EACAE,GACG,0BAAMa,UAAU,oFAAhB,OAIHZ,GACG,0BAAMY,UAAU,iFAAhB,aAIR,wBAAIA,UAAU,0BACTX,GAEL,uBAAGW,UAAU,iBACRR,EADL,SACkBC,EADlB,SAC+BC,IAGnC,yBAAKM,UAAU,2HACVF,EAAOA,EAAKK,KAAI,SAACC,GAAD,OAChB,0BACDC,QAAS,kBACTR,EAAeO,IACfJ,UAAU,oFACLI,MAEJ,MC5DbE,QAAQC,IAAIC,GA8EGC,MA5Ef,WAAgB,IAAD,EACYC,mBAAS,IADrB,mBACNC,EADM,KACAC,EADA,OAEiBF,mBAAS,IAF1B,mBAENG,EAFM,KAEGC,EAFH,KAIbC,qBAAU,kBAAOH,EAAQJ,KAAM,IAE/B,IAmBMX,EAAiB,SAACO,GACnBS,EAAQG,SAASZ,IACpBU,EAAW,GAAD,mBAAKD,GAAL,CAAcT,MAapBa,EAAeN,EAAKO,QAlCP,SAAC,GACZ,IADa5B,EACd,EADcA,KAAMC,EACpB,EADoBA,MAAOK,EAC3B,EAD2BA,MAAOD,EAClC,EADkCA,UAEvC,GAAsB,IAAnBkB,EAAQM,OACT,OAAO,EAGT,IAAMrB,EAAO,CAACR,EAAMC,GAUpB,OARGK,GACDE,EAAKC,KAAL,MAAAD,EAAI,YAASF,IAGZD,GACDG,EAAKC,KAAL,MAAAD,EAAI,YAASH,IAGRkB,EAAQO,OAAM,SAAAF,GAAM,OAAIpB,EAAKkB,SAASE,SAoB/C,OACE,oCACE,4BAAQlB,UAAU,qBAChB,yBAAKA,UAAU,SAASC,IAAI,gCAAgCC,IAAI,cAElE,yBAAKF,UAAU,oBACVa,EAAQM,OAAS,GAChB,yBAAKnB,UAAS,wEACZa,EAAQV,KAAI,SAACe,GAAD,OACV,0BAAMlB,UAAU,4CACd,0BAAMA,UAAU,iCACbkB,GAEH,0BAAMb,QAAS,kBAzBJgB,EAyB4BH,OAxBrDJ,EAAWD,EAAQK,QACjB,SAAAI,GAAC,OAAGA,IAAMD,MAFY,IAACA,GAyBqCrB,UAAU,gDAA1D,cAEF,4BAAQK,QArBD,WACnBS,EAAW,KAoBgCd,UAAU,mCAAzC,UAGS,IAAhBW,EAAKQ,OACF,mDAEAF,EAAad,KAAI,SAACnB,GAAD,OACf,kBAAC,EAAD,CACEA,IAAKA,EACLuC,IAAKvC,EAAIwC,GACT3B,eAAgBA,UCrEhC4B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.b71d78b3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst JobBoardComponent = ({job:{\r\n    company, \r\n    logo, \r\n    isNew, \r\n    featured, \r\n    position, \r\n    role, \r\n    level, \r\n    postedAt, \r\n    contract, \r\n    location, \r\n    languages, \r\n    tools\r\n    },\r\n    handleTagClick,\r\n}) => {\r\n    const tags = [role, level];\r\n    if(tools) {\r\n        tags.push(...tools);\r\n    }\r\n    if(languages) {\r\n        tags.push(...languages);\r\n    }\r\n\r\n    return(\r\n    <div className={`flex flex-col bg-white shadow-md my-16 mx-10 p-6 rounded \r\n        ${\r\n            featured && 'border-l-4 border-teal-500 border-solid'\r\n        } lg:flex-row lg:my-4`}>\r\n        <div>\r\n            <img className='-mt-16 mb-4 w-20 h-20 lg:mt-0 lg:mb-0 lg:h-24 lg:w-24'\r\n                src={logo} \r\n                alt={company}\r\n            />\r\n        </div>\r\n        <div className='flex flex-col justify-between ml-4'>\r\n            <h3 className='font-bold text-teal-500'>\r\n                {company}\r\n                {isNew && (\r\n                    <span className=\"bg-teal-500 text-teal-100 font-bold py-1 px-2 m-2 rounded-full uppercase text-sm\">\r\n                        New\r\n                    </span>)} \r\n\r\n                {featured && (\r\n                    <span className=\"bg-gray-800 text-white font-bold py-1 px-2 m-2 rounded-full uppercase text-sm\">\r\n                        Featured\r\n                    </span>)}\r\n            </h3>\r\n            <h2 className='font-bold text-xl my-2'>\r\n                {position}\r\n            </h2>\r\n            <p className='text-gray-700'>\r\n                {postedAt} · {contract} · {location}\r\n            </p>\r\n        </div>\r\n        <div className='flex flex-wrap items-center mt-4 mx-4 pt-4 border-t border-gray-500 border-solid lg:ml-auto lg:border-0 lg:pt-0 lg:mt-0'>\r\n            {tags ? tags.map((tag) => \r\n            (<span \r\n            onClick={() => \r\n            handleTagClick(tag)}\r\n            className='text-teal-500 bg-teal-100 font-bold mr-4 mb-4 p-2 lg:mb-0 rounded cursos-pointer'>\r\n                {tag}\r\n            </span>))\r\n            :''}\r\n        </div>\r\n    </div>\r\n)};\r\n            \r\nexport default JobBoardComponent;","/* eslint-disable jsx-a11y/alt-text */\nimport React, {useState, useEffect} from 'react';\nimport data from './assets/data.json';\nimport JobBoardComponent from './components/JobBoardComponent';\n\nconsole.log(data);\n\nfunction App() {\n  const [jobs, setJobs] =  useState([]);\n  const [filters, setFilters] = useState([]);\n\n  useEffect(() =>  setJobs(data),[]);\n\n  const filterFunc = ({role, level, tools, languages}\n    ) => {\n    if(filters.length === 0){\n      return true;\n    }\n\n    const tags = [role, level];\n\n    if(tools){\n      tags.push(...tools);\n    }\n\n    if(languages){\n      tags.push(...languages);\n    }\n\n    return filters.every(filter => tags.includes(filter));\n  }\n\n  const handleTagClick = (tag) => {\n    if(filters.includes(tag)) return; \n    setFilters([...filters, tag]);\n  }\n\n  const handleFilterClick = (passedFilter) =>{\n    setFilters(filters.filter(\n      f=> f !== passedFilter\n      ));\n  }\n\n  const clearFilters = () => {\n    setFilters([]);\n  }\n\n  const filteredJobs = jobs.filter(filterFunc); \n\n  return (\n    <>\n      <header className='bg-teal-500 mb-12'>\n        <img className='w-full' src='/images/bg-header-desktop.svg' alt='bg-image'/>\n      </header>\n      <div className='container m-auto'>  \n          {filters.length > 0 && (\n            <div className={`flex bg-white shadow-md -my-16 mb-16 mx-10 p-6 rounded z-10 relative`}>\n            {(filters.map((filter) => \n                <span className='mr-4 mb-4 p-2 rounded font-bold  lg:mb-0'>\n                  <span className='text-teal-500 bg-teal-100 p-2'>\n                    {filter}\n                  </span>\n                  <span onClick={() => handleFilterClick(filter)} className='cursos-pointer bg-teal-500 text-teal-100 p-2'>❌</span>\n                </span>))} \n                <button onClick={clearFilters} className='font-bold text-gray-700 ml-auto'>Clear</button>\n            </div>\n          )}  \n        {jobs.length === 0 ? (\n            <p>Jobs are fetching...</p>\n          ): (\n            filteredJobs.map((job)=>(\n              <JobBoardComponent \n                job={job} \n                key={job.id} \n                handleTagClick={handleTagClick}\n              />\n            ))\n          )}\n      </div>\n    </>  \n  );\n}\n\nexport default App;\n\n//TODOs\n//1. Study the design & JSON(an array of object) -> to know how to structure our JSX\n//2. Job Board Component -> the component that will receive the data JSON\n//3. Get the data from the JSON\n//4. Pass dwn the date to the Job board component\n//5. Style it\n//6. Filter component\n//7. Filther the data","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}